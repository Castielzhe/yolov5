# YOLOv5 🚀 by Ultralytics, AGPL-3.0 license

# Parameters
nc: 80  # number of classes 类别数量,可能会被数据配置文件中的覆盖
depth_multiple: 0.33  # model depth multiple 控制结构网络深度的系数 控制卷积数量 控制的是 CSP1_X CSP2_X 里的X
width_multiple: 0.50  # layer channel multiple 控制网络宽度的系数 控制卷积核的数量 控制的是 CSP1_X CSP2_X 里的X
anchors:  # 给定先验框的尺度大小 可能会被覆盖
  - [ 4,6, 6,6, 8,5 ]  # P2/4 小等物体边框

  - [10,13, 16,30, 33,23]  # P3/8 小物体边框  每下采样一次叫 P1
  - [30,61, 62,45, 59,119]  # P4/16 中等物体边框

# YOLOv5 v6.0 backbone 骨干网络配置信息
backbone:
  #  [from, number, module, args]
  # [from当前层输入是哪层输出 -1表示上一层,
  # number 当前层重复次数是 number * depth_multiple 然后取整保证最小是1,
  # module,模块名称具体支持的模块名称是 common.py 中所有模块 + torch.nn所有模块
  # args 基于给定的模块对应的参数列表]
  [[-1, 1, Conv, [64, 6, 2, 2, 1, 1, 'nn.ReLU()']],  # 0-P1/2  [out_channels, kernel_size, stride, padding]
   [-1, 1, Conv, [128, 3, 2, None, 1, 1, 'nn.RReLU(0.1, 0.3)']],  # 1-P2/4
   [-1, 3, C3, [128]],          # 2
   [-1, 1, Conv, [256, 3, 2]],  # 3-P3/8
   [-1, 6, C3, [256]],          # 4
   [-1, 1, Conv, [512, 3, 2]],  # 5-P4/16
   [-1, 9, C3, [512]],          # 6
   [-1, 1, Conv, [1024, 3, 2]],  # 7-P5/32
   [-1, 3, C3, [1024]],         # 8
   [-1, 1, SPPF, [1024, 5]],  # 9
  ]

# YOLOv5 v6.0 head   neck和head的配置信息
head:
  [[-1, 1, Conv, [512, 1, 1]],  # 10
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],  # 11
   [[-1, 6], 1, Concat, [1]],  # 12 cat backbone P4
   [-1, 3, C3, [512, False]],  # 13

   [-1, 1, Conv, [256, 1, 1]],  # 14
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],  # 15
   [[-1, 4], 1, Concat, [1]],  # 16 cat backbone P3
   [-1, 3, C3, [256, False]],  # 17

   [ -1, 1, Conv, [ 128, 1, 1 ] ],  # 18
   [ -1, 1, nn.Upsample, [ None, 2, 'nearest' ] ],  # 19
   [ [ -1, 2 ], 1, Concat, [ 1 ] ],  # 20
   [ -1, 3, C3, [ 128, False ] ],  # 21 (P2/4-small)

   [-1, 1, Conv, [128, 3, 2]],  # 22
   [[-1, 18], 1, Concat, [1]],  # 23 cat head P3
   [-1, 3, C3, [256, False]],  # 24 (P3/8-medium)

   [ -1, 1, Conv, [ 256, 3, 2 ] ],  # 25
   [ [ -1, 14 ], 1, Concat, [ 1 ] ],  # 26 cat head P3
   [ -1, 3, C3, [ 512, False ] ],  # 27 (P4/16-medium)

   [[21, 24, 27], 1, Detect, [nc, anchors]],  #  Detect(P2, P3, P4)
  ]
